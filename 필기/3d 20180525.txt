HLSL 

유사한 점
- 기본은 C언어에서 시작, 그래서 비슷함, 변수와 함수로 구성되있다.
- C스타일의 함수 구조체 사용
- 블록은 중괄호 사용
- 전처리를 지원

다른 점
- 포인터 자료형과 연산을 지원하지 않음
- 동적할당을 지원하지 않음
- 템플릿을 지원하지않음(최근에는 일부 지원)
- 재귀함수 호출을 지원하지 않음

언리얼, 유니티도 이것을 기반으로 돌아감

TA의 기본은 HLSL	

연산자 제공

전처리 지시자 제공

예약어와 기본 문법
- 변수명
- 공백문자
- 정수(10진수,8진수,16진수)끝이L로끝나면64bit상수, 실수
- 문자, 문자열

변수
- 이름(name), 적용범위(scope), 메타데이터(metadata)
- 전역변수, 지역변수, 함수 파라메터
- Storage_Class
  1) extern: 함수 파라메터로 사용 불가능, 전역 변수면 디폴트로 선언
  2) static: c스타일의 전역변수를 선언하고 싶고 그 메모리를 할당 받고 싶을 때 사용
  3) uniform: 값이 자주 바뀌지 않는다, 객체의 정보가 달라졌을 때
  4) const: 값을 수정할 수 없음
  

지금까지 쓴 행렬 -> 행 우선 행렬
쉐이더에선 열 우선 행렬이여야 장점이 생김

행렬을 넘길 때 전치행렬로 전달 (CPU -> GPU)

상수 버퍼 변수의 패킹 규칙
- 2개의 레지스터에 걸칠 수 없다
- 하나의 메모리들은 4k를 저장할 수 있고, 여기에 4k에 해당하는 레지스터가 있다
- 